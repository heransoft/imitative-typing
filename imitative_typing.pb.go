// Code generated by protoc-gen-go.
// source: imitative_typing/imitative_typing.proto
// DO NOT EDIT!

/*
Package imitative_typing is a generated protocol buffer package.

It is generated from these files:
	imitative_typing/imitative_typing.proto

It has these top-level messages:
	File
	JavaScriptLines
*/
package imitative_typing

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type File struct {
	AllLine          []string `protobuf:"bytes,1,rep" json:"AllLine,omitempty"`
	Name             *string  `protobuf:"bytes,2,opt" json:"Name,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}

func (m *File) GetAllLine() []string {
	if m != nil {
		return m.AllLine
	}
	return nil
}

func (m *File) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type JavaScriptLines struct {
	Lines            []string `protobuf:"bytes,1,rep" json:"Lines,omitempty"`
	BaseLineNumber   *uint32  `protobuf:"varint,2,opt" json:"BaseLineNumber,omitempty"`
	Order            *int32   `protobuf:"varint,3,opt" json:"Order,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *JavaScriptLines) Reset()         { *m = JavaScriptLines{} }
func (m *JavaScriptLines) String() string { return proto.CompactTextString(m) }
func (*JavaScriptLines) ProtoMessage()    {}

func (m *JavaScriptLines) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *JavaScriptLines) GetBaseLineNumber() uint32 {
	if m != nil && m.BaseLineNumber != nil {
		return *m.BaseLineNumber
	}
	return 0
}

func (m *JavaScriptLines) GetOrder() int32 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func init() {
}
